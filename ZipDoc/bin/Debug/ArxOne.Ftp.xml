<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArxOne.Ftp</name>
    </assembly>
    <members>
        <member name="T:ArxOne.Ftp.CheckCertificateEventArgs">
            <summary>
            Certificate check EventArgs
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.CheckCertificateEventArgs.Certificate">
            <summary>
            Gets or sets the certificate.
            </summary>
            <value>The certificate.</value>
        </member>
        <member name="P:ArxOne.Ftp.CheckCertificateEventArgs.Chain">
            <summary>
            Gets or sets the chain.
            </summary>
            <value>The chain.</value>
        </member>
        <member name="P:ArxOne.Ftp.CheckCertificateEventArgs.Sslpolicyerrors">
            <summary>
            Gets or sets the sslpolicyerrors.
            </summary>
            <value>The sslpolicyerrors.</value>
        </member>
        <member name="P:ArxOne.Ftp.CheckCertificateEventArgs.IsValid">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ArxOne.Ftp.CheckCertificateEventArgs"/> is valid.
            </summary>
            <value><c>true</c> if valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ArxOne.Ftp.CheckCertificateEventArgs.Invalidate">
            <summary>
            Invalidates this instance.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.CheckCertificateEventArgs.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.CheckCertificateEventArgs"/> class.
            </summary>
            <param name="certificate">The certificate.</param>
            <param name="chain">The chain.</param>
            <param name="sslpolicyerrors">The sslpolicyerrors.</param>
        </member>
        <member name="T:ArxOne.Ftp.Exceptions.FtpAuthenticationException">
            <summary>
            Authentication exception
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpAuthenticationException.#ctor(System.String,ArxOne.Ftp.FtpReplyCode)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="code">The code.</param>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpAuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpAuthenticationException"/> class.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpAuthenticationException"/> class.
            </summary>
            <param name="info">The data for serializing or deserializing the object.</param>
            <param name="context">The source and destination for the object.</param>
        </member>
        <member name="T:ArxOne.Ftp.Exceptions.FtpFileException">
            <summary>
            File exception
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpFileException.#ctor(System.String,ArxOne.Ftp.FtpReplyCode)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpFileException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="code">The code.</param>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpFileException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpFileException"/> class.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpFileException"/> class.
            </summary>
            <param name="info">The data for serializing or deserializing the object.</param>
            <param name="context">The source and destination for the object.</param>
        </member>
        <member name="T:ArxOne.Ftp.Exceptions.FtpProtocolException">
            <summary>
            Protocol exceptions
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.Exceptions.FtpProtocolException.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpProtocolException.#ctor(System.String,ArxOne.Ftp.FtpReplyCode)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="code">The code.</param>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpProtocolException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
            <param name="info">The data for serializing or deserializing the object.</param>
            <param name="context">The source and destination for the object.</param>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpProtocolException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is a null reference (Nothing in Visual Basic).
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter"/>
            </PermissionSet>
        </member>
        <member name="T:ArxOne.Ftp.Exceptions.FtpTransportException">
            <summary>
            Transport exceptions
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpTransportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpTransportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpTransportException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpTransportException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpTransportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
            <param name="info">The data for serializing or deserializing the object.</param>
            <param name="context">The source and destination for the object.</param>
        </member>
        <member name="T:ArxOne.Ftp.Exceptions.FtpException">
            <summary>
            FTP base exception
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Exceptions.FtpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.Exceptions.FtpException"/> class.
            </summary>
            <param name="info">The data for serializing or deserializing the object.</param>
            <param name="context">The source and destination for the object.</param>
        </member>
        <member name="T:ArxOne.Ftp.FtpServerFeatures">
            <summary>
            Represents FTP server features
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpServerFeatures.Features">
            <summary>
            Gets the features.
            </summary>
            <value>
            The features.
            </value>
        </member>
        <member name="M:ArxOne.Ftp.FtpServerFeatures.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpServerFeatures"/> class.
            </summary>
            <param name="replyList">The reply list.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpServerFeatures.RegisterFeature(System.String,System.String)">
            <summary>
            Registers the feature.
            </summary>
            <param name="feature">The feature.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpServerFeatures.HasFeature(System.String)">
            <summary>
            Determines whether the specified feature is present.
            </summary>
            <param name="feature">The request feature.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpServerFeatures.GetFeatureParameters(System.String)">
            <summary>
            Gets the feature parameters.
            </summary>
            <param name="feature">The feature.</param>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.FtpPath">
            <summary>
            Represents a FTP path
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpPath.Separator">
            <summary>
            The separator character
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpPath._path">
            <summary>
            The _path
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpPath"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpPath.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpPath.op_Implicit(System.String)~ArxOne.Ftp.FtpPath">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:ArxOne.Ftp.FtpPath"/>.
            </summary>
            <param name="path">The path.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpPath.op_Addition(ArxOne.Ftp.FtpPath,System.String)">
            <summary>
            Adds a new part to path.
            </summary>
            <param name="path">The path.</param>
            <param name="fileName">Name of the file.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpPath.GetFileName">
            <summary>
            Gets the name of the file.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.FtpProtection">
            <summary>
            Protection levels for FTP
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtection.ControlChannel">
            <summary>
            Protection on control channel
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtection.DataChannel">
            <summary>
            Protection on data channel
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtection.AllChannels">
            <summary>
            All channels protection
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtection.Ftp">
            <summary>
            The FTP default protection
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtection.FtpES">
            <summary>
            The FTPES default protection
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtection.FtpS">
            <summary>
            The FTPS default protection
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.FtpServerType">
            <summary>
            Type for FTP server
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpServerType.Unknown">
            <summary>
            Afraid of the unknown?
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpServerType.Unix">
            <summary>
            UNIX (and Linux)
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpServerType.Windows">
            <summary>
            Windows
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.IO.FtpActiveStream">
            <summary>
            FTP active transfer stream
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpActiveStream.#ctor(System.Net.Sockets.Socket,System.TimeSpan,ArxOne.Ftp.FtpSession)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.IO.FtpActiveStream"/> class.
            </summary>
            <param name="socket">The socket.</param>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="session">The session.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpActiveStream.EnsureConnection">
            <summary>
            Ensures there is a valid connection.
            </summary>
            <exception cref="T:ArxOne.Ftp.Exceptions.FtpTransportException">Active stream did not get connection</exception>
        </member>
        <member name="T:ArxOne.Ftp.IO.FtpPassiveStream">
            <summary>
            FTP stream
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.IO.FtpPassiveStream.Session">
            <summary>
            Gets or sets the holder.
            </summary>
            <value>The holder.</value>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.#ctor(System.Net.Sockets.Socket,ArxOne.Ftp.FtpSession)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.IO.FtpPassiveStream"/> class.
            </summary>
            <param name="socket">The socket.</param>
            <param name="session">The session.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.#ctor(ArxOne.Ftp.FtpSession)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.IO.FtpPassiveStream"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.SetSocket(System.Net.Sockets.Socket)">
            <summary>
            Sets the socket.
            </summary>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Abort">
            <summary>
            Aborts this instance.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Release(System.Boolean)">
            <summary>
            Releases the instance (deferences it from the session locks).
            </summary>
            <param name="expectEndReply">if set to <c>true</c> [expect end reply].</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Process(System.Action)">
            <summary>
            Processes the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Process``1(System.Func{``0})">
            <summary>
            Processes the specified func.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="func">The func.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from the <see cref="T:System.Net.Sockets.NetworkStream"/>.
            </summary>
            <param name="buffer">An array of type <see cref="T:System.Byte"/> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream"/>.</param>
            <param name="offset">The location in <paramref name="buffer"/> to begin storing the data to.</param>
            <param name="size">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream"/>.</param>
            <returns>
            The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="buffer"/> parameter is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="offset"/> parameter is less than 0.
            -or-
            The <paramref name="offset"/> parameter is greater than the length of <paramref name="buffer"/>.
            -or-
            The <paramref name="size"/> parameter is less than 0.
            -or-
            The <paramref name="size"/> parameter is greater than the length of <paramref name="buffer"/> minus the value of the <paramref name="offset"/> parameter.
            -or-
            An error occurred when accessing the socket. See the Remarks section for more information.
            </exception>
            <exception cref="T:System.IO.IOException">
            The underlying <see cref="T:System.Net.Sockets.Socket"/> is closed.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:System.Net.Sockets.NetworkStream"/> is closed.
            -or-
            There is a failure reading from the network.
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.BaseRead(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call to base.Read.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes data to the <see cref="T:System.Net.Sockets.NetworkStream"/>.
            </summary>
            <param name="buffer">An array of type <see cref="T:System.Byte"/> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream"/>.</param>
            <param name="offset">The location in <paramref name="buffer"/> from which to start writing data.</param>
            <param name="size">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="buffer"/> parameter is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="offset"/> parameter is less than 0.
            -or-
            The <paramref name="offset"/> parameter is greater than the length of <paramref name="buffer"/>.
            -or-
            The <paramref name="size"/> parameter is less than 0.
            -or-
            The <paramref name="size"/> parameter is greater than the length of <paramref name="buffer"/> minus the value of the <paramref name="offset"/> parameter.
            </exception>
            <exception cref="T:System.IO.IOException">
            There was a failure while writing to the network.
            -or-
            An error occurred when accessing the socket. See the Remarks section for more information.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:System.Net.Sockets.NetworkStream"/> is closed.
            -or-
            There was a failure reading from the network.
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.BaseWrite(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calls base.Write.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking, such as if the stream is constructed from a pipe or console output.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpPassiveStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="P:ArxOne.Ftp.IO.FtpPassiveStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <value></value>
            <returns>true if the stream supports reading; otherwise, false.
            </returns>
        </member>
        <member name="P:ArxOne.Ftp.IO.FtpPassiveStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <value></value>
            <returns>true if the stream supports seeking; otherwise, false.
            </returns>
        </member>
        <member name="P:ArxOne.Ftp.IO.FtpPassiveStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <value></value>
            <returns>true if the stream supports writing; otherwise, false.
            </returns>
        </member>
        <member name="P:ArxOne.Ftp.IO.FtpPassiveStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <value></value>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            <exception cref="T:System.NotSupportedException">
            A class derived from Stream does not support seeking.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="P:ArxOne.Ftp.IO.FtpPassiveStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <value></value>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="T:ArxOne.Ftp.IO.FtpStream">
            <summary>
            FTP stream
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpStream.Abort">
            <summary>
            Aborts this instance.
            To be used with caution, since it does not sends information to control channel
            (whereas Dispose() does)
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.IO.FtpStream.ExpectEndReply">
            <summary>
            Gets or sets a value indicating whether an end reply is expected.
            Use with caution
            </summary>
            <value>
              <c>true</c> if [expect end reply]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ArxOne.Ftp.IO.FtpStream.Validated">
            <summary>
            Sets the stream as validated (it will required a reply from server when disposing).
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.IO.SocketExtensions">
            <summary>
            Extensions to Socket class
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.IO.SocketExtensions.Connect(System.Net.Sockets.Socket,System.String,System.Int32,System.TimeSpan)">
            <summary>
            Connects the specified socket.
            </summary>
            <param name="socket">The socket.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.SocketExtensions.Connect(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32,System.TimeSpan)">
            <summary>
            Connects the specified socket.
            </summary>
            <param name="socket">The socket.</param>
            <param name="addresses">The addresses.</param>
            <param name="port">The port.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.SocketExtensions.AsyncConnect(System.Action,System.TimeSpan)">
            <summary>
            Async connexion.
            </summary>
            <param name="connect">The connect.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.SocketExtensions.AsyncConnect(System.Net.Sockets.Socket,System.Func{System.Net.Sockets.Socket,System.AsyncCallback,System.Object,System.IAsyncResult},System.TimeSpan)">
            <summary>
            Asyncs the connect.
            </summary>
            <param name="socket">The socket.</param>
            <param name="connect">The connect.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.SocketExtensions.Accept(System.Net.Sockets.Socket,System.TimeSpan)">
            <summary>
            Connects the specified socket.
            </summary>
            <param name="socket">The socket.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:ArxOne.Ftp.IO.SocketExtensions.AsyncAccept(System.Net.Sockets.Socket,System.Func{System.Net.Sockets.Socket,System.AsyncCallback,System.Object,System.IAsyncResult},System.TimeSpan)">
            <summary>
            Asyncs the connect.
            </summary>
            <param name="socket">The socket.</param>
            <param name="accept">The accept.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="T:ArxOne.Ftp.IO.TlsStreamFactory">
            <summary>
            Allows to create TlsStream, this MF internal class!
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.IO.TlsStreamFactory.TlsStreamType">
            <summary>
            Gets the type of the TLS stream.
            </summary>
            <value>The type of the TLS stream.</value>
        </member>
        <member name="M:ArxOne.Ftp.IO.TlsStreamFactory.CreateTlsStream(System.Uri,System.IO.Stream)">
            <summary>
            Creates the TLS stream.
            </summary>
            <param name="uri">The URI.</param>
            <param name="underlyingStream">The underlying stream.</param>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.FtpClientUtility">
            <summary>
            FTP client
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.OpenDataStream(ArxOne.Ftp.FtpSession,ArxOne.Ftp.FtpTransferMode)">
            <summary>
            Opens a data stream.
            </summary>
            <param name="session">The session handle.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.List(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends LIST command.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.ProcessList(ArxOne.Ftp.FtpSession,ArxOne.Ftp.FtpPath)">
            <summary>
            Processes the list.
            </summary>
            <param name="session">The handle.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.ListEntries(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Lists the entries.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.StatEntries(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Lists the entries.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Stat(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends a STAT command.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.EnumerateEntries(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Enumerates the entries.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="parent">The parent.</param>
            <param name="lines">The lines.</param>
            <param name="ignoreSpecialEntries">if set to <c>true</c> [ignore special entries].</param>
            <returns></returns>
            <exception cref="T:ArxOne.Ftp.Exceptions.FtpProtocolException">Impossible to parse line:  + line;new FtpReplyCode(553)</exception>
            <exception cref="T:ArxOne.Ftp.FtpReplyCode">553</exception>
            <exception cref="T:ArxOne.Ftp.Exceptions.FtpException">Unhandled server type</exception>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Retr(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath,ArxOne.Ftp.FtpTransferMode)">
            <summary>
            Sends RETR command.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.ProcessRetr(ArxOne.Ftp.FtpSession,ArxOne.Ftp.FtpPath,ArxOne.Ftp.FtpTransferMode)">
            <summary>
            Processes the retr.
            </summary>
            <param name="session">The handle.</param>
            <param name="path">The path.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Stor(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath,ArxOne.Ftp.FtpTransferMode)">
            <summary>
            Send STOR command.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.ProcessStor(ArxOne.Ftp.FtpSession,ArxOne.Ftp.FtpPath,ArxOne.Ftp.FtpTransferMode)">
            <summary>
            Processes the stor.
            </summary>
            <param name="session">The handle.</param>
            <param name="path">The path.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Rmd(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends a RMD command (ReMove Directory).
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Dele(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends a DELE command (DELEte file).
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Delete(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath,System.Nullable{System.Boolean})">
            <summary>
            Deletes the specified path.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <param name="isDirectory">The is directory.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Delete(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath,System.Boolean)">
            <summary>
            Deletes the specified path.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <param name="isDirectory">if set to <c>true</c> [is directory].</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Delete(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Deletes the specified path.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Mkd(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends a MKD command (MaKe Directory).
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.RnfrTo(ArxOne.Ftp.FtpClient,System.String,System.String)">
            <summary>
            Sends RNFR / RNTO pair.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.GetEntry(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Gets a <see cref="T:ArxOne.Ftp.FtpEntry" /> about given path.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns>
            The entry, or null if entry does not exist
            </returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Mlst(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends a MLST command.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.MlstEntry(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends a MLST command.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.Mlsd(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends LIST command.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.MlsdEntries(ArxOne.Ftp.FtpClient,ArxOne.Ftp.FtpPath)">
            <summary>
            Sends MLSD command, parses result.
            </summary>
            <param name="ftpClient">The FTP client.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.ProcessMlsd(ArxOne.Ftp.FtpSession,ArxOne.Ftp.FtpPath)">
            <summary>
            Processes the list.
            </summary>
            <param name="session">The handle.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.ParseMlsx(System.String,ArxOne.Ftp.FtpPath)">
            <summary>
            Parses a MLSx line.
            </summary>
            <param name="line">The line.</param>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.GetDateFact(System.String)">
            <summary>
            Gets the date fact.
            </summary>
            <param name="factValue">The fact value.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.GetTypeFact(System.String)">
            <summary>
            Gets the type fact.
            </summary>
            <param name="factValue">The fact value.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientUtility.GetFact``1(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Func{System.String,``0},System.Func{``0})">
            <summary>
            Gets the fact (abstract method for lazy people).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="facts">The facts.</param>
            <param name="factName">Name of the fact.</param>
            <param name="parseFactValue">The parse fact value.</param>
            <param name="getDefault">The get default.</param>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.FtpClient">
            <summary>
            FTP client core. 
            Exposes only basic mechanisms
            Extended mechanisms and command support are in FtpClient class
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.Uri">
            <summary>
            Gets or sets the root URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.Passive">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ArxOne.Ftp.FtpClient"/> is in passive mode.
            </summary>
            <value><c>true</c> if passive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.ActiveTransferHost">
            <summary>
            Gets the active transfer host (set by configuration).
            </summary>
            <value>
            The active transfer host.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
            <value>The connect timeout.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.ReadWriteTimeout">
            <summary>
            Gets or sets the read write timeout.
            </summary>
            <value>The read write timeout.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.SessionTimeout">
            <summary>
            Gets the session timeout.
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.ProxyConnect">
            <summary>
            Gets or sets the proxy.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.Credential">
            <summary>
            Gets or sets the credential.
            </summary>
            <value>The credential.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.AnonymousPassword">
            <summary>
            Gets or sets the anonymous password.
            </summary>
            <value>The anonymous password.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.ServerFeatures">
            <summary>
            Gets the server features.
            </summary>
            <value>
            The server features.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.DefaultEncoding">
            <summary>
            Gets or sets the default encoding.
            Leave this null to let the automatic detection do the job
            (Unfortunately the current debian stable pure-ftpd version doesn't support protocol change)
            </summary>
            <value>The default encoding.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.DefaultParameters">
            <summary>
            Gets the default parameters.
            </summary>
            <value>The default parameters.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.ChannelProtection">
            <summary>
            Gets a value indicating whether data channel protection is active.
            </summary>
            <value>
            <c>true</c> if [_data channel protection]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.System">
            <summary>
            Gets the system.
            </summary>
            <value>The system.</value>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetSystem(ArxOne.Ftp.FtpSession)">
            <summary>
            Gets the system.
            </summary>
            <param name="session">The FTP session.</param>
            <returns></returns>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.ServerType">
            <summary>
            Gets the type of the server.
            </summary>
            <value>
            The type of the server.
            </value>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetServerType(ArxOne.Ftp.FtpSession)">
            <summary>
            Gets the type of the server.
            </summary>
            <param name="session">The FTP session.</param>
            <returns></returns>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.Platform">
            <summary>
            Gets the FTP platform.
            </summary>
            <value>
            The FTP platform.
            </value>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetPlatform(ArxOne.Ftp.FtpSession)">
            <summary>
            Gets the platform.
            </summary>
            <param name="session">The FTP session.</param>
            <returns></returns>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.HostAddress">
            <summary>
            Gets the host address.
            </summary>
            <value>
            The host address.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.ActualActiveTransferHost">
            <summary>
            Gets or sets the actual active transfer host.
            </summary>
            <value>
            The actual active transfer host.
            </value>
        </member>
        <member name="E:ArxOne.Ftp.FtpClient.CheckCertificate">
            <summary>
            Occurs when [check certificate].
            </summary>
        </member>
        <member name="E:ArxOne.Ftp.FtpClient.ConnectionInitialized">
            <summary>
            Occurs when [session initialized].
            </summary>
        </member>
        <member name="E:ArxOne.Ftp.FtpClient.Request">
            <summary>
            Occurs when [sending request].
            </summary>
        </member>
        <member name="E:ArxOne.Ftp.FtpClient.Reply">
            <summary>
            Occurs when [received reply].
            </summary>
        </member>
        <member name="E:ArxOne.Ftp.FtpClient.IOError">
            <summary>
            Occurs when [IO error].
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>The _port.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClient.Protocol">
            <summary>
            Gets the protocol.
            </summary>
            <value>
            The _protocol.
            </value>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.#ctor(ArxOne.Ftp.FtpProtocol,System.String,System.Int32,System.Net.NetworkCredential,ArxOne.Ftp.FtpClientParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpClient"/> class.
            </summary>
            <param name="protocol">The protocol.</param>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="credential">The credential.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.#ctor(System.Uri,System.Net.NetworkCredential,ArxOne.Ftp.FtpClientParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpClient"/> class.
            </summary>
            <param name="uri">The URI.</param>
            <param name="credential">The credential.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.InitializeParameters(ArxOne.Ftp.FtpClientParameters)">
            <summary>
            Initializes the parameters.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetFtpPlatform(ArxOne.Ftp.FtpServerType)">
            <summary>
            Gets the FTP platform.
            </summary>
            <param name="serverType">Type of the server.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">serverType;null</exception>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetDefaultDataChannelProtection(System.Uri)">
            <summary>
            Gets the default data channel protection.
            </summary>
            <param name="uri">The URI.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.OnRequest(ArxOne.Ftp.ProtocolMessageEventArgs)">
            <summary>
            Called when [sending request].
            </summary>
            <param name="e">The <see cref="T:ArxOne.Ftp.ProtocolMessageEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.OnReply(ArxOne.Ftp.ProtocolMessageEventArgs)">
            <summary>
            Called when [received reply].
            </summary>
            <param name="e">The <see cref="T:ArxOne.Ftp.ProtocolMessageEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.OnIOError(ArxOne.Ftp.ProtocolMessageEventArgs)">
            <summary>
            Raises the IOError event.
            </summary>
            <param name="e">The <see cref="T:ArxOne.Ftp.ProtocolMessageEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetScheme(ArxOne.Ftp.FtpProtocol)">
            <summary>
            Gets the scheme.
            </summary>
            <param name="protocol">The protocol.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetServerFeatures(ArxOne.Ftp.FtpSession)">
            <summary>
            Gets the features.
            </summary>
            <param name="session">The session.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.LoadServerFeatures(ArxOne.Ftp.FtpSession)">
            <summary>
            Loads the features.
            </summary>
            <param name="session">The session.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.HasServerFeature(System.String,ArxOne.Ftp.FtpSession)">
            <summary>
            Determines whether the specified feature has a requested feature.
            </summary>
            <param name="feature">The feature.</param>
            <param name="session">The session.</param>
            <returns>
              <c>true</c> if the specified feature has feature; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetProtocol(System.Uri)">
            <summary>
            Gets the protocol.
            </summary>
            <param name="uri">The URI.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.GetPort(System.Uri)">
            <summary>
            Gets the port.
            </summary>
            <param name="uri">The URI.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.OnConnectionInitialized">
            <summary>
            Raises the <see cref="E:ArxOne.Ftp.FtpClient.ConnectionInitialized"/> event.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.OnCheckCertificate(ArxOne.Ftp.CheckCertificateEventArgs)">
            <summary>
            Raises the <see cref="E:ArxOne.Ftp.FtpClient.CheckCertificate"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:ArxOne.Ftp.CheckCertificateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.CreateConnection">
            <summary>
            Creates the session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.PopAvailableConnection">
            <summary>
            Pops the available session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.FindOrCreateConnection">
            <summary>
            Finds the or create session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.Session">
            <summary>
            Uses a session.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.ReleaseConnection(ArxOne.Ftp.FtpConnection)">
            <summary>
            Releases the session.
            </summary>
            <param name="connection">The session.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.ConnectionThread">
            <summary>
            Sessions thread, to cleanup.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.CleanupConnections">
            <summary>
            Cleanups the (old) unused sessions.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.SendSingleCommand(System.String,System.String[])">
            <summary>
            Sends the command.
            </summary>
            <param name="command">The command.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.Process``1(System.Func{ArxOne.Ftp.FtpSession,``0},ArxOne.Ftp.FtpSession)">
            <summary>
            Processes the specified action with a session.
            </summary>
            <typeparam name="TResult">The type of the ret.</typeparam>
            <param name="action">The action.</param>
            <param name="session">An existing session or null to create a new one.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpClient.Process(System.Action{ArxOne.Ftp.FtpSession},ArxOne.Ftp.FtpSession)">
            <summary>
            Processes the specified action with a session.
            </summary>
            <param name="action">The action.</param>
            <param name="session">An existing session or null to create a new one.</param>
        </member>
        <member name="T:ArxOne.Ftp.FtpClientParameters">
            <summary>
            Parameters to initialize FtpClient instance
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
            <value>The connect timeout.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.ReadWriteTimeout">
            <summary>
            Gets or sets the read write timeout.
            </summary>
            <value>The read write timeout.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.SessionTimeout">
            <summary>
            Gets or sets the session timeout.
            </summary>
            <value>
            The session timeout.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.Passive">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ArxOne.Ftp.FtpClientParameters"/> is passive.
            </summary>
            <value><c>true</c> if passive; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.ActiveTransferHost">
            <summary>
            Gets or sets the active transfer host.
            When specified, this address is used with PORT/EPRT commands
            </summary>
            <value>
            The active transfer host.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.AnonymousPassword">
            <summary>
            Gets or sets the anonymous password.
            </summary>
            <value>The anonymous password.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.DefaultEncoding">
            <summary>
            Gets or sets the default encoding.
            </summary>
            <value>The default encoding.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.ProxyConnect">
            <summary>
            Gets or sets the proxy connector.
            Arg1: host
            Arg2: port
            Arg3: true for control stream, false for data stream
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpClientParameters.ChannelProtection">
            <summary>
            Gets or sets the channel protection.
            Leave to null to use default value according to protocol
            (false for FTP, true for FTPS and FTPES)
            </summary>
            <value>
            The channel protection.
            </value>
        </member>
        <member name="M:ArxOne.Ftp.FtpClientParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpClientParameters"/> class.
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.FtpEntry">
            <summary>
            Represents a filesystem entry
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpEntry.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpEntry.Path">
            <summary>
            Gets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpEntry.Target">
            <summary>
            Gets or sets the target (for symlinks, null otherwise).
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpEntry.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpEntry.Type">
            <summary>
            Gets or sets a value indicating whether this instance is directory.
            </summary>
            <value>
            	<c>true</c> if this instance is directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpEntry.Date">
            <summary>
            Gets or sets the date.
            </summary>
            <value>The date.</value>
        </member>
        <member name="M:ArxOne.Ftp.FtpEntry.#ctor(ArxOne.Ftp.FtpPath,System.String,System.Nullable{System.Int64},ArxOne.Ftp.FtpEntryType,System.DateTime,ArxOne.Ftp.FtpPath)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpEntry" /> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="name">The name.</param>
            <param name="size">The size.</param>
            <param name="type">The type.</param>
            <param name="date">The date.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpEntry.#ctor(ArxOne.Ftp.FtpPath,System.Nullable{System.Int64},ArxOne.Ftp.FtpEntryType,System.DateTime,ArxOne.Ftp.FtpPath)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpEntry"/> class.
            </summary>
            <param name="path">The path.</param>
            <param name="size">The size.</param>
            <param name="type">The type.</param>
            <param name="date">The date.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:ArxOne.Ftp.FtpEntryType">
            <summary>
            Type for FtpEntry
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpEntryType.File">
            <summary>
            Regular file
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpEntryType.Directory">
            <summary>
            Directory
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpEntryType.Link">
            <summary>
            Symlink
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.FtpProtocol">
            <summary>
            FTP Protocol
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtocol.Ftp">
            <summary>
            Standard FTP, with no SSL
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtocol.FtpS">
            <summary>
            Implicit SSL FTP
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpProtocol.FtpES">
            <summary>
            Explicit SSL FTP
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.FtpReply">
            <summary>
            FTP Reply line
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpReply.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpReply.Lines">
            <summary>
            Gets or sets the lines.
            </summary>
            <value>The lines.</value>
        </member>
        <member name="M:ArxOne.Ftp.FtpReply.ParseLine(System.String)">
            <summary>
            Parses the line.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpReply.AppendLine(System.String)">
            <summary>
            Appends the line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpReply.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpReply"/> class.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpReply.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpReply"/> class.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="T:ArxOne.Ftp.FtpReplyCode">
            <summary>
            FTP reply code
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpReplyCode.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpReplyCode.Severity">
            <summary>
            Gets the severity.
            </summary>
            <value>The severity.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpReplyCode.Class">
            <summary>
            Gets the class.
            </summary>
            <value>The class.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpReplyCode.IsSuccess">
            <summary>
            Gets a value indicating whether this instance is success.
            </summary>
            <value>
            	<c>true</c> if this instance is success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ArxOne.Ftp.FtpReplyCode.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpReplyCode"/> class.
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpReplyCode.op_Implicit(ArxOne.Ftp.FtpReplyCode)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:ArxOne.Ftp.FtpReplyCode"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="replyCode">The reply code.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpReplyCode.ToString">
            <summary>
            Converts to string
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.FtpReplyCodeClass">
            <summary>
            Error class
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeClass.Syntax">
            <summary>
            These replies refer to syntax errors,
            syntactically correct commands that don't fit any
            functional category, unimplemented or superfluous
            commands.
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeClass.Information">
            <summary>
            These are replies to requests for
            information, such as status or help.
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeClass.Connections">
            <summary>
            Replies referring to the control and
            data connections.
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeClass.AuthenticationAndAccounting">
            <summary>
            Replies for the login
            process and accounting procedures.
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeClass.Filesystem">
            <summary>
            These replies indicate the status of the
            Server file system vis-a-vis the requested transfer or
            other file system action.
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.FtpReplyCodeSeverity">
            <summary>
            Reply code severy class
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeSeverity.PositivePreliminary">
            <summary>
            The requested action is being initiated; expect another
            reply before proceeding with a new command.  (The
            user-process sending another command before the
            completion reply would be in violation of protocol; but
            server-FTP processes should queue any commands that
            arrive while a preceding command is in progress.)  This
            type of reply can be used to indicate that the command
            was accepted and the user-process may now pay attention
            to the data connections, for implementations where
            simultaneous monitoring is difficult.  The server-FTP
            process may send at most, one 1yz reply per command.
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeSeverity.PositiveCompletion">
            <summary>
            The requested action has been successfully completed.  A
            new request may be initiated.
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeSeverity.PositiveIntermediate">
            <summary>
            The command has been accepted, but the requested action
            is being held in abeyance, pending receipt of further
            information.  The user should send another command
            specifying this information.  This reply is used in
            command sequence groups.
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeSeverity.TransientNegativeCompletion">
            <summary>
            The command was not accepted and the requested action did
            not take place, but the error condition is temporary and
            the action may be requested again.  The user should
            return to the beginning of the command sequence, if any.
            It is difficult to assign a meaning to "transient",
            particularly when two distinct sites (Server- and
            User-processes) have to agree on the interpretation.
            Each reply in the 4yz category might have a slightly
            different time value, but the intent is that the
            user-process is encouraged to try again.  A rule of thumb
            in determining if a reply fits into the 4yz or the 5yz
            (Permanent Negative) category is that replies are 4yz if
            the commands can be repeated without any change in
            command form or in properties of the User or Server
            (e.g., the command is spelled the same with the same
            arguments used; the user does not change his file access
            or user name; the server does not put up a new
            implementation.)        
            /// </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpReplyCodeSeverity.PermanentNegativeCompletion">
            <summary>
            The command was not accepted and the requested action did
            not take place.  The User-process is discouraged from
            repeating the exact request (in the same sequence).  Even
            some "permanent" error conditions can be corrected, so
            the human user may want to direct his User-process to
            reinitiate the command sequence by direct action at some
            point in the future (e.g., after the spelling has been
            changed, or the user has altered his directory status.)
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.FtpConnection">
            <summary>
            Represents a single session
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpConnection.Client">
            <summary>
            Gets or sets the FTP client.
            </summary>
            <value>
            The _FTP client.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpConnection.Encoding">
            <summary>
            Text encoding mode
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpConnection.TransferMode">
            <summary>
            Gets or sets the transfer mode.
            </summary>
            <value>
            The transfer mode.
            </value>
        </member>
        <member name="P:ArxOne.Ftp.FtpConnection.ProtocolStream">
            <summary>
            Gets the transport stream.
            </summary>
            <value>The transport stream.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpConnection.State">
            <summary>
            Gets the session parameters.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpConnection.#ctor(ArxOne.Ftp.FtpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpConnection"/> class.
            </summary>
            <param name="client">The FTP client.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpConnection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpConnection.Disconnect">
            <summary>
            Disposes the transport.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpConnection.AddReference">
            <summary>
            Adds a reference.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpConnection.Release">
            <summary>
            Releases this instance.
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.FtpSession">
            <summary>
            Session lock: holds a session when used
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpSession.Connection">
            <summary>
            Gets or sets the FTP session.
            </summary>
            <value>The FTP session.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpSession.ProtocolStream">
            <summary>
            Gets the transport stream.
            </summary>
            <value>The transport stream.</value>
        </member>
        <member name="P:ArxOne.Ftp.FtpSession.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="F:ArxOne.Ftp.FtpSession.Eol">
            <summary>
            FTP End of line
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.#ctor(ArxOne.Ftp.FtpConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpSession"/> class.
            </summary>
            <param name="connection">The FTP session.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.Invalidate">
            <summary>
            Invalidates this session (it won't be reused).
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.Process``1(System.Func{``0},System.String,System.String,System.String[])">
            <summary>
            Executes the given function in a context where exceptions will be translated.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="func">The func.</param>
            <param name="commandDescription">The command description.</param>
            <param name="requestCommand">The request command.</param>
            <param name="requestParameters">The request parameters.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.Connect(System.TimeSpan,System.TimeSpan)">
            <summary>
            Connects this instance.
            </summary>
            <param name="connectTimeout">The timeout.</param>
            <param name="readWriteTimeout">The read write timeout.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.ProcessConnect(System.TimeSpan,System.TimeSpan)">
            <summary>
            Processes the connect.
            </summary>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readWriteTimeout">The read write timeout.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.InitializeTransport(System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes the transport.
            </summary>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readWriteTimeout">The read write timeout.</param>
            <param name="ssl">if set to <c>true</c> [SSL].</param>
            <exception cref="T:ArxOne.Ftp.Exceptions.FtpTransportException">Socket not connected to  + _host + , message= + message</exception>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.ConnectTransport(System.TimeSpan,System.TimeSpan,System.String@)">
            <summary>
            Connects the transport.
            </summary>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readWriteTimeout">The read write timeout.</param>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.DirectConnectTransport(System.TimeSpan,System.TimeSpan,System.String@)">
            <summary>
            Direct transport connection.
            </summary>
            <param name="readWriteTimeout">The read write timeout.</param>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.UpgradeToSsl(System.IO.Stream)">
            <summary>
            Upgrades the stream to SSL
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.CreateDataStream(System.Net.Sockets.Socket)">
            <summary>
            Creates a data stream, optionnally secured.
            </summary>
            <param name="socket">The socket.</param>
            <returns></returns>
            <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- The <paramref name="socket" /> parameter is in a nonblocking state. </exception>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.InitializeProtocol">
            <summary>
            Initializes the protocol.
            To be strict, SSL/TLS is not on the protocol level, 
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.InitializeConnection">
            <summary>
            Initializes the session, logs the user in
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.InitializeTransportEncoding">
            <summary>
            Initializes the transport encoding.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.EnterSslProtocol">
            <summary>
            Enters the SSL protocol.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.CheckCertificateHandler(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Checks the certificate.
            </summary>
            <param name="sender">The sender.</param>
            <param name="certificate">The certificate.</param>
            <param name="chain">The chain.</param>
            <param name="sslpolicyerrors">The sslpolicyerrors.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.LeaveSslProtocol">
            <summary>
            Leaves the SSL protocol.
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.Expect(ArxOne.Ftp.FtpReply,System.Int32[])">
            <summary>
            Expects the specified reply.
            </summary>
            <param name="reply">The reply.</param>
            <param name="codes">The codes.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.Expect(System.Int32[])">
            <summary>
            Expects the specified code.
            </summary>
            <param name="codes">The codes.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.ThrowException(ArxOne.Ftp.FtpReply)">
            <summary>
            Throws the exception given a reply.
            </summary>
            <param name="reply">The reply.</param>
            <exception cref="T:ArxOne.Ftp.Exceptions.FtpFileException"></exception>
            <exception cref="T:ArxOne.Ftp.Exceptions.FtpProtocolException"></exception>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.SendCommand(System.String,System.String[])">
            <summary>
            Sends the command.
            </summary>
            <param name="command">The command.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.SendCommand(System.IO.Stream,System.String,System.String[])">
            <summary>
            Sends the command.
            </summary>
            <param name="stream">The stream.</param>
            <param name="command">The command.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.ProcessSendCommand(System.IO.Stream,System.String,System.String[])">
            <summary>
            Processes the send command.
            </summary>
            <param name="stream">The stream.</param>
            <param name="command">The command.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.ReadReply">
            <summary>
            Reads the reply.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.ReadReply(System.IO.Stream)">
            <summary>
            Reads the reply.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.ProcessReadReply(System.IO.Stream)">
            <summary>
            Processes the read reply.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.GetCommandLine(System.String,System.String[])">
            <summary>
            Gets the command line.
            </summary>
            <param name="command">The command.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.ReadLine(System.Func{System.Int32})">
            <summary>
            Reads the line.
            </summary>
            <param name="byteReader">The byte reader.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.WriteLine(System.IO.Stream,System.String)">
            <summary>
            Writes the line.
            </summary>
            <param name="stream">The stream.</param>
            <param name="line">The line.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.Write(System.IO.Stream,System.String)">
            <summary>
            Writes the string.
            </summary>
            <param name="stream">The stream.</param>
            <param name="line">The line.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.CheckProtection(ArxOne.Ftp.FtpProtection)">
            <summary>
            Checks the protection.
            </summary>
            <param name="requiredChannelProtection">The required channel protection.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.OpenDataStream(System.Boolean,System.TimeSpan,System.TimeSpan,ArxOne.Ftp.FtpTransferMode)">
            <summary>
            Opens the data stream.
            </summary>
            <param name="passive">if set to <c>true</c> [passive].</param>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readWriteTimeout">The read write timeout.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.OpenPassiveDataStream(System.TimeSpan,System.TimeSpan)">
            <summary>
            Opens the passive data stream.
            </summary>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readWriteTimeout">The read write timeout.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.OpenDirectPassiveDataStream(System.String,System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Opens the direct passive data stream.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readWriteTimeout">The read write timeout.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.OpenActiveDataStream(System.TimeSpan,System.TimeSpan)">
            <summary>
            Opens the active data stream.
            </summary>
            <param name="connectTimeout">The connect timeout.</param>
            <param name="readWriteTimeout">The read write timeout.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.GetSessionParameter(System.String)">
            <summary>
            Gets the session parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.CheckSessionParameter(System.String,System.String)">
            <summary>
            Checks the session parameter has the existing value.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="parameterValue">The parameter value.</param>
        </member>
        <member name="M:ArxOne.Ftp.FtpSession.SetTransferMode(ArxOne.Ftp.FtpTransferMode)">
            <summary>
            Sets the transfer mode.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:ArxOne.Ftp.FtpTransferMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpTransferMode.ASCII">
            <summary>
            ASCII transfer mode
            </summary>
        </member>
        <member name="F:ArxOne.Ftp.FtpTransferMode.Binary">
            <summary>
            Binary (image) mode
            </summary>
        </member>
        <member name="T:ArxOne.Ftp.Platform.FtpPlatform">
            <summary>
            Base for platform-specific operations
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Platform.FtpPlatform.Parse(System.String,ArxOne.Ftp.FtpPath)">
            <summary>
            Parses the specified directory line.
            </summary>
            <param name="directoryLine">The directory line.</param>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.Platform.FtpPlatform.ParseUnix(System.String,ArxOne.Ftp.FtpPath)">
            <summary>
            Parses the line.
            </summary>
            <param name="directoryLine">The directory line.</param>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.Platform.FtpPlatform.ParseDateTime(System.Text.RegularExpressions.Match,System.DateTime)">
            <summary>
            Parses the date time.
            </summary>
            <param name="match">The match.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.Platform.FtpPlatform.ParseDateTime(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Parses the date time.
            </summary>
            <param name="literalYear">The literal year.</param>
            <param name="literalMonth">The literal month.</param>
            <param name="literalDay">The literal day.</param>
            <param name="literalHour">The literal hour.</param>
            <param name="literalMinute">The literal minute.</param>
            <param name="pm">PM.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.Platform.FtpPlatform.ParseMonth(System.String)">
            <summary>
            Gets the month.
            </summary>
            <param name="literalMonth">The literal month.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.Platform.FtpPlatform.EscapePath(System.String)">
            <summary>
            Escapes the path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.Platform.FtpPlatform.EscapePath(System.String,System.String)">
            <summary>
            Escapes the path.
            Provided at this level for convenience
            </summary>
            <param name="path">The path.</param>
            <param name="escapeCharacters">The escape characters.</param>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.Platform.UnixFtpPlatform">
            <summary>
            Default implementation for Unix platforms
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Platform.UnixFtpPlatform.EscapePath(System.String)">
            <summary>
            Escapes the path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.Platform.WindowsFtpPlatform">
            <summary>
            Windows IIS FTP specific platform
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.Platform.WindowsFtpPlatform.Parse(System.String,ArxOne.Ftp.FtpPath)">
            <summary>
            Parses Windows formatted list line.
            </summary>
            <param name="directoryLine">The directory line.</param>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:ArxOne.Ftp.Platform.WindowsFtpPlatform.ParseLine(System.String,ArxOne.Ftp.FtpPath)">
            <summary>
            Parses the line.
            </summary>
            <param name="directoryLine">The directory line.</param>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="T:ArxOne.Ftp.ProtocolMessageEventArgs">
            <summary>
            EventArgs for protocol message
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.ProtocolMessageEventArgs.SessionID">
            <summary>
            Gets or sets the session ID.
            </summary>
            <value>The session ID.</value>
        </member>
        <member name="P:ArxOne.Ftp.ProtocolMessageEventArgs.RequestCommand">
            <summary>
            Gets or sets the request message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:ArxOne.Ftp.ProtocolMessageEventArgs.RequestParameters">
            <summary>
            Gets or sets the request parameters.
            </summary>
            <value>The request parameters.</value>
        </member>
        <member name="P:ArxOne.Ftp.ProtocolMessageEventArgs.Reply">
            <summary>
            Gets or sets the reply.
            </summary>
            <value>The reply.</value>
        </member>
        <member name="M:ArxOne.Ftp.ProtocolMessageEventArgs.#ctor(System.Int32,System.String,System.String[],ArxOne.Ftp.FtpReply)">
            <summary>
            Initializes a new instance of the <see cref="T:ArxOne.Ftp.ProtocolMessageEventArgs"/> class.
            </summary>
            <param name="sessionID">The session ID.</param>
            <param name="requestCommand">The request command.</param>
            <param name="requestParameters">The request parameters.</param>
            <param name="reply">The reply.</param>
        </member>
        <member name="T:ArxOne.Ftp.FtpSessionState">
            <summary>
            Session state
            </summary>
        </member>
        <member name="P:ArxOne.Ftp.FtpSessionState.Item(System.String)">
            <summary>
              Gets or sets the parameter. If the value is the current one, then no command is sent
            </summary>
        </member>
        <member name="M:ArxOne.Ftp.FtpSessionState.#ctor(ArxOne.Ftp.FtpSession)">
            <summary>
              Initializes a new instance of the <see cref="T:ArxOne.Ftp.FtpSessionState" /> class.
            </summary>
            <param name="ftpSession"> The FTP session. </param>
        </member>
    </members>
</doc>
